
POST_LAB_4_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000c1e  00000cb2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800110  00800110  00000cc2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000952  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000723  00000000  00000000  000016c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008c0  00000000  00000000  00001de9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  000026ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040e  00000000  00000000  0000276c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ba  00000000  00000000  00002b7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002e34  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 08 01 	jmp	0x210	; 0x210 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e1       	ldi	r30, 0x1E	; 30
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 31       	cpi	r26, 0x17	; 23
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  9e:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setup>:
    }
}

void setup(void) {
    // Configurar pines PB0 a PB2 como salidas para los transistores
    DDRB |= 0b00000111;
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	87 60       	ori	r24, 0x07	; 7
  aa:	84 b9       	out	0x04, r24	; 4

    // Configurar PC3 y PC0 como entradas con pull-up habilitado para los botones
    DDRC &= ~((1 << DDC3) | (1 << DDC0)); // Configurar como entrada
  ac:	87 b1       	in	r24, 0x07	; 7
  ae:	86 7f       	andi	r24, 0xF6	; 246
  b0:	87 b9       	out	0x07, r24	; 7
    PORTC |= ((1 << PORTC3) | (1 << PORTC0)); // Habilitar resistencias de pull-up en PC3 y PC0
  b2:	88 b1       	in	r24, 0x08	; 8
  b4:	89 60       	ori	r24, 0x09	; 9
  b6:	88 b9       	out	0x08, r24	; 8

    // Configurar pines PD0 a PD7 como salidas para los LEDs
    DDRD |= 0b11111111;
  b8:	8a b1       	in	r24, 0x0a	; 10
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	8a b9       	out	0x0a, r24	; 10
  be:	08 95       	ret

000000c0 <__vector_4>:
}

ISR(PCINT1_vect) {
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	8f e3       	ldi	r24, 0x3F	; 63
  d0:	9c e9       	ldi	r25, 0x9C	; 156
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <__vector_4+0x12>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <__vector_4+0x18>
  d8:	00 00       	nop
	_delay_ms(10);
    // Verificar si la interrupción fue causada por PCINT11 (PC3)
    if (PINC & (1 << PINC3)) {
  da:	33 9b       	sbis	0x06, 3	; 6
  dc:	05 c0       	rjmp	.+10     	; 0xe8 <__vector_4+0x28>
        contador++; // Incrementar contador si el botón en PC3 fue presionado
  de:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
  e2:	8f 5f       	subi	r24, 0xFF	; 255
  e4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <contador>
    }
    // Verificar si la interrupción fue causada por PCINT8 (PC0)
    if (PINC & (1 << PINC0)) {
  e8:	30 9b       	sbis	0x06, 0	; 6
  ea:	05 c0       	rjmp	.+10     	; 0xf6 <__vector_4+0x36>
        contador--; // Decrementar contador si el botón en PC0 fue presionado
  ec:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
  f0:	81 50       	subi	r24, 0x01	; 1
  f2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <contador>
	}
	contador = (contador > 255) ? 0 : contador;// Si contador Overflow 255 se resetea el contador
  f6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
  fa:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
  fe:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <contador>
	contador = (contador < 0) ? 255 : contador;// Si contador Underflow 0 se setea a 255
 102:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
 106:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
 10a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <contador>
}
 10e:	9f 91       	pop	r25
 110:	8f 91       	pop	r24
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <initADC>:

void initADC(void){
	//reiniciamos
	ADMUX = 0;
 11c:	ec e7       	ldi	r30, 0x7C	; 124
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	10 82       	st	Z, r1
	// Seleccionamos ADC6
	ADMUX = 0b110;
 122:	86 e0       	ldi	r24, 0x06	; 6
 124:	80 83       	st	Z, r24
	//Referencia AVCC = 5V
	ADMUX |= (1<<REFS0);
 126:	80 81       	ld	r24, Z
 128:	80 64       	ori	r24, 0x40	; 64
 12a:	80 83       	st	Z, r24
	ADMUX &= ~(1<<REFS1);
 12c:	80 81       	ld	r24, Z
 12e:	8f 77       	andi	r24, 0x7F	; 127
 130:	80 83       	st	Z, r24
	//Justificacion a la izquierda
	ADMUX |= (1<<ADLAR);
 132:	80 81       	ld	r24, Z
 134:	80 62       	ori	r24, 0x20	; 32
 136:	80 83       	st	Z, r24
	
	ADCSRA =0;
 138:	ea e7       	ldi	r30, 0x7A	; 122
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	10 82       	st	Z, r1
	//Habilitamos la interrupcion del ADC
	ADCSRA |= (1<<ADIE);
 13e:	80 81       	ld	r24, Z
 140:	88 60       	ori	r24, 0x08	; 8
 142:	80 83       	st	Z, r24
	//Habilitamos prescaller de 16M/128 Fadc = 125kHz
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 144:	80 81       	ld	r24, Z
 146:	87 60       	ori	r24, 0x07	; 7
 148:	80 83       	st	Z, r24
	//Habilitando el ADC
	ADCSRA |= (1<<ADEN);
 14a:	80 81       	ld	r24, Z
 14c:	80 68       	ori	r24, 0x80	; 128
 14e:	80 83       	st	Z, r24
 150:	08 95       	ret

00000152 <main>:

//Tabla
const uint8_t mylist[] = {0x7E, 0x28, 0x5D, 0x6D, 0x2B, 0x67, 0x77, 0x2C, 0x7F, 0x2F, 0x3F, 0x73, 0x56, 0x79, 0x57, 0x17};

int main(void) {
	setup(); // Configurar Puertos
 152:	0e 94 53 00 	call	0xa6	; 0xa6 <setup>
	
    cli(); // Deshabilitar Interrupciones
 156:	f8 94       	cli
	
	//INTERRUPCIONES
    // Habilitar interrupciones de pin change para los pines PC0 y PC3
	PCMSK1 |= ((1 << PCINT11) | (1 << PCINT8)); // Habilitar interrupciones para PCINT11 y PCINT8
 158:	ec e6       	ldi	r30, 0x6C	; 108
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	89 60       	ori	r24, 0x09	; 9
 160:	80 83       	st	Z, r24
    PCICR |= (1 << PCIE1); // PCINT1 8-14 Grupo 1
 162:	e8 e6       	ldi	r30, 0x68	; 104
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	82 60       	ori	r24, 0x02	; 2
 16a:	80 83       	st	Z, r24
	
	//ADC
	DDRD |=0xFF;
 16c:	8a b1       	in	r24, 0x0a	; 10
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0;
 172:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0;
 174:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	initADC();
 178:	0e 94 8e 00 	call	0x11c	; 0x11c <initADC>
	
    sei(); // Habilitar Interrupciones Globales
 17c:	78 94       	sei
    while (1) {
        // Programa principal
		
		//Displays
		//D1
		PORTB |= (1 << PB1);// Encender transistor en PB1
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	82 60       	ori	r24, 0x02	; 2
 182:	85 b9       	out	0x05, r24	; 5
		//ADC
		PORTD = mylist[PP1];// Cargar valor a puerto
 184:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <PP1>
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	e0 50       	subi	r30, 0x00	; 0
 18c:	ff 4f       	sbci	r31, 0xFF	; 255
 18e:	80 81       	ld	r24, Z
 190:	8b b9       	out	0x0b, r24	; 11
 192:	8f e9       	ldi	r24, 0x9F	; 159
 194:	9f e0       	ldi	r25, 0x0F	; 15
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0x44>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x4a>
 19c:	00 00       	nop
		_delay_ms(1);
		PORTB &= ~(1 << PB1);// Apagar transistor en PB1
 19e:	85 b1       	in	r24, 0x05	; 5
 1a0:	8d 7f       	andi	r24, 0xFD	; 253
 1a2:	85 b9       	out	0x05, r24	; 5
 1a4:	8f e9       	ldi	r24, 0x9F	; 159
 1a6:	9f e0       	ldi	r25, 0x0F	; 15
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <main+0x56>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <main+0x5c>
 1ae:	00 00       	nop
		_delay_ms(1);
		//D2
		PORTB |= (1 << PB2);// Encender transistor en PB2
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	84 60       	ori	r24, 0x04	; 4
 1b4:	85 b9       	out	0x05, r24	; 5
		PORTD = mylist[PP2];// Cargar valor a puerto
 1b6:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__data_end>
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	e0 50       	subi	r30, 0x00	; 0
 1be:	ff 4f       	sbci	r31, 0xFF	; 255
 1c0:	80 81       	ld	r24, Z
 1c2:	8b b9       	out	0x0b, r24	; 11
 1c4:	8f e9       	ldi	r24, 0x9F	; 159
 1c6:	9f e0       	ldi	r25, 0x0F	; 15
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <main+0x76>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x7c>
 1ce:	00 00       	nop
		_delay_ms(1);
		PORTB &= ~(1 << PB2);// Apagar transistor en PB2
 1d0:	85 b1       	in	r24, 0x05	; 5
 1d2:	8b 7f       	andi	r24, 0xFB	; 251
 1d4:	85 b9       	out	0x05, r24	; 5
 1d6:	8f e9       	ldi	r24, 0x9F	; 159
 1d8:	9f e0       	ldi	r25, 0x0F	; 15
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <main+0x88>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x8e>
 1e0:	00 00       	nop
		_delay_ms(1);
		
		//Leds
		PORTB |= (1 << PB0);// Encender transistor en PB0
 1e2:	85 b1       	in	r24, 0x05	; 5
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	85 b9       	out	0x05, r24	; 5
		PORTD = 0;// Limpiamos salida de leds
 1e8:	1b b8       	out	0x0b, r1	; 11
		PORTD = contador;// Mostrar valor de contador
 1ea:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <contador>
 1ee:	8b b9       	out	0x0b, r24	; 11
 1f0:	8f e9       	ldi	r24, 0x9F	; 159
 1f2:	9f e0       	ldi	r25, 0x0F	; 15
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <main+0xa2>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0xa8>
 1fa:	00 00       	nop
		_delay_ms(1);
		PORTB &= ~(1 << PB0);// Apagar transistor en PB0
 1fc:	85 b1       	in	r24, 0x05	; 5
 1fe:	8e 7f       	andi	r24, 0xFE	; 254
 200:	85 b9       	out	0x05, r24	; 5
 202:	8f e9       	ldi	r24, 0x9F	; 159
 204:	9f e0       	ldi	r25, 0x0F	; 15
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0xb4>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0xba>
 20c:	00 00       	nop
 20e:	b7 cf       	rjmp	.-146    	; 0x17e <main+0x2c>

00000210 <__vector_21>:
	//Habilitando el ADC
	ADCSRA |= (1<<ADEN);

}

ISR(ADC_vect){
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	3f 93       	push	r19
 21e:	4f 93       	push	r20
 220:	5f 93       	push	r21
 222:	6f 93       	push	r22
 224:	7f 93       	push	r23
 226:	8f 93       	push	r24
 228:	9f 93       	push	r25
 22a:	af 93       	push	r26
 22c:	bf 93       	push	r27
 22e:	ef 93       	push	r30
 230:	ff 93       	push	r31
	//counter = 0.2493*ADCH;
	
	
	if(counter = 0){ PP1 = 0;
 232:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <counter>
 236:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <counter+0x1>
 23a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <counter+0x2>
 23e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <counter+0x3>
	PP2 = 0;}
	if((counter > 0) && (counter<= 1)){ PP1 = 1;
 242:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 246:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 24a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 24e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 252:	20 e0       	ldi	r18, 0x00	; 0
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	a9 01       	movw	r20, r18
 258:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 25c:	18 16       	cp	r1, r24
 25e:	ac f4       	brge	.+42     	; 0x28a <__vector_21+0x7a>
 260:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 264:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 268:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 26c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	40 e8       	ldi	r20, 0x80	; 128
 276:	5f e3       	ldi	r21, 0x3F	; 63
 278:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 27c:	18 16       	cp	r1, r24
 27e:	2c f0       	brlt	.+10     	; 0x28a <__vector_21+0x7a>
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 286:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 1) && (counter<= 2)){ PP1 = 2;
 28a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 28e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 292:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 296:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	40 e8       	ldi	r20, 0x80	; 128
 2a0:	5f e3       	ldi	r21, 0x3F	; 63
 2a2:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 2a6:	18 16       	cp	r1, r24
 2a8:	ac f4       	brge	.+42     	; 0x2d4 <__vector_21+0xc4>
 2aa:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 2ae:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 2b2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 2b6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	40 e0       	ldi	r20, 0x00	; 0
 2c0:	50 e4       	ldi	r21, 0x40	; 64
 2c2:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 2c6:	18 16       	cp	r1, r24
 2c8:	2c f0       	brlt	.+10     	; 0x2d4 <__vector_21+0xc4>
 2ca:	82 e0       	ldi	r24, 0x02	; 2
 2cc:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 2d0:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 2) && (counter<= 3)){ PP1 = 3;
 2d4:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 2d8:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 2dc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 2e0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	50 e4       	ldi	r21, 0x40	; 64
 2ec:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 2f0:	18 16       	cp	r1, r24
 2f2:	ac f4       	brge	.+42     	; 0x31e <__vector_21+0x10e>
 2f4:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 2f8:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 2fc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 300:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	40 e4       	ldi	r20, 0x40	; 64
 30a:	50 e4       	ldi	r21, 0x40	; 64
 30c:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 310:	18 16       	cp	r1, r24
 312:	2c f0       	brlt	.+10     	; 0x31e <__vector_21+0x10e>
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 31a:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 3) && (counter<= 4)){ PP1 = 4;
 31e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 322:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 326:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 32a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	40 e4       	ldi	r20, 0x40	; 64
 334:	50 e4       	ldi	r21, 0x40	; 64
 336:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 33a:	18 16       	cp	r1, r24
 33c:	ac f4       	brge	.+42     	; 0x368 <__vector_21+0x158>
 33e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 342:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 346:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 34a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	40 e8       	ldi	r20, 0x80	; 128
 354:	50 e4       	ldi	r21, 0x40	; 64
 356:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 35a:	18 16       	cp	r1, r24
 35c:	2c f0       	brlt	.+10     	; 0x368 <__vector_21+0x158>
 35e:	84 e0       	ldi	r24, 0x04	; 4
 360:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 364:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 4) && (counter<= 5)){ PP1 = 5;
 368:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 36c:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 370:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 374:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 378:	20 e0       	ldi	r18, 0x00	; 0
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	40 e8       	ldi	r20, 0x80	; 128
 37e:	50 e4       	ldi	r21, 0x40	; 64
 380:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 384:	18 16       	cp	r1, r24
 386:	ac f4       	brge	.+42     	; 0x3b2 <__vector_21+0x1a2>
 388:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 38c:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 390:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 394:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 398:	20 e0       	ldi	r18, 0x00	; 0
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	40 ea       	ldi	r20, 0xA0	; 160
 39e:	50 e4       	ldi	r21, 0x40	; 64
 3a0:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 3a4:	18 16       	cp	r1, r24
 3a6:	2c f0       	brlt	.+10     	; 0x3b2 <__vector_21+0x1a2>
 3a8:	85 e0       	ldi	r24, 0x05	; 5
 3aa:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 3ae:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 5) && (counter<= 6)){ PP1 = 6;
 3b2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 3b6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 3ba:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 3be:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 3c2:	20 e0       	ldi	r18, 0x00	; 0
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	40 ea       	ldi	r20, 0xA0	; 160
 3c8:	50 e4       	ldi	r21, 0x40	; 64
 3ca:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 3ce:	18 16       	cp	r1, r24
 3d0:	ac f4       	brge	.+42     	; 0x3fc <__vector_21+0x1ec>
 3d2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 3d6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 3da:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 3de:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 3e2:	20 e0       	ldi	r18, 0x00	; 0
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	40 ec       	ldi	r20, 0xC0	; 192
 3e8:	50 e4       	ldi	r21, 0x40	; 64
 3ea:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 3ee:	18 16       	cp	r1, r24
 3f0:	2c f0       	brlt	.+10     	; 0x3fc <__vector_21+0x1ec>
 3f2:	86 e0       	ldi	r24, 0x06	; 6
 3f4:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 3f8:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 6) && (counter<= 7)){ PP1 = 7;
 3fc:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 400:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 404:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 408:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 40c:	20 e0       	ldi	r18, 0x00	; 0
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	40 ec       	ldi	r20, 0xC0	; 192
 412:	50 e4       	ldi	r21, 0x40	; 64
 414:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 418:	18 16       	cp	r1, r24
 41a:	ac f4       	brge	.+42     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 41c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 420:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 424:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 428:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 42c:	20 e0       	ldi	r18, 0x00	; 0
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	40 ee       	ldi	r20, 0xE0	; 224
 432:	50 e4       	ldi	r21, 0x40	; 64
 434:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 438:	18 16       	cp	r1, r24
 43a:	2c f0       	brlt	.+10     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43c:	87 e0       	ldi	r24, 0x07	; 7
 43e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 442:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 7) && (counter<= 8)){ PP1 = 8;
 446:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 44a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 44e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 452:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 456:	20 e0       	ldi	r18, 0x00	; 0
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	40 ee       	ldi	r20, 0xE0	; 224
 45c:	50 e4       	ldi	r21, 0x40	; 64
 45e:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 462:	18 16       	cp	r1, r24
 464:	ac f4       	brge	.+42     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 466:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 46a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 46e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 472:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 476:	20 e0       	ldi	r18, 0x00	; 0
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	40 e0       	ldi	r20, 0x00	; 0
 47c:	51 e4       	ldi	r21, 0x41	; 65
 47e:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 482:	18 16       	cp	r1, r24
 484:	2c f0       	brlt	.+10     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 486:	88 e0       	ldi	r24, 0x08	; 8
 488:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 48c:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 8) && (counter<= 9)){ PP1 = 9;
 490:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 494:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 498:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 49c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	40 e0       	ldi	r20, 0x00	; 0
 4a6:	51 e4       	ldi	r21, 0x41	; 65
 4a8:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 4ac:	18 16       	cp	r1, r24
 4ae:	ac f4       	brge	.+42     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4b0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 4b4:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 4b8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 4bc:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 4c0:	20 e0       	ldi	r18, 0x00	; 0
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	40 e1       	ldi	r20, 0x10	; 16
 4c6:	51 e4       	ldi	r21, 0x41	; 65
 4c8:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 4cc:	18 16       	cp	r1, r24
 4ce:	2c f0       	brlt	.+10     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d0:	89 e0       	ldi	r24, 0x09	; 9
 4d2:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 4d6:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 9) && (counter<= 10)){ PP1 = 10;
 4da:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 4de:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 4e2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 4e6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 4ea:	20 e0       	ldi	r18, 0x00	; 0
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	40 e1       	ldi	r20, 0x10	; 16
 4f0:	51 e4       	ldi	r21, 0x41	; 65
 4f2:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 4f6:	18 16       	cp	r1, r24
 4f8:	ac f4       	brge	.+42     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 4fa:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 4fe:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 502:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 506:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 50a:	20 e0       	ldi	r18, 0x00	; 0
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	40 e2       	ldi	r20, 0x20	; 32
 510:	51 e4       	ldi	r21, 0x41	; 65
 512:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 516:	18 16       	cp	r1, r24
 518:	2c f0       	brlt	.+10     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 51a:	8a e0       	ldi	r24, 0x0A	; 10
 51c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 520:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 10) && (counter<= 11)){ PP1 = 11;
 524:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 528:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 52c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 530:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 534:	20 e0       	ldi	r18, 0x00	; 0
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	40 e2       	ldi	r20, 0x20	; 32
 53a:	51 e4       	ldi	r21, 0x41	; 65
 53c:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 540:	18 16       	cp	r1, r24
 542:	ac f4       	brge	.+42     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 544:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 548:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 54c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 550:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 554:	20 e0       	ldi	r18, 0x00	; 0
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	40 e3       	ldi	r20, 0x30	; 48
 55a:	51 e4       	ldi	r21, 0x41	; 65
 55c:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 560:	18 16       	cp	r1, r24
 562:	2c f0       	brlt	.+10     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 564:	8b e0       	ldi	r24, 0x0B	; 11
 566:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 56a:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 11) && (counter<= 12)){ PP1 = 12;
 56e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 572:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 576:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 57a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 57e:	20 e0       	ldi	r18, 0x00	; 0
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	40 e3       	ldi	r20, 0x30	; 48
 584:	51 e4       	ldi	r21, 0x41	; 65
 586:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 58a:	18 16       	cp	r1, r24
 58c:	ac f4       	brge	.+42     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 58e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 592:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 596:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 59a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 59e:	20 e0       	ldi	r18, 0x00	; 0
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	40 e4       	ldi	r20, 0x40	; 64
 5a4:	51 e4       	ldi	r21, 0x41	; 65
 5a6:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 5aa:	18 16       	cp	r1, r24
 5ac:	2c f0       	brlt	.+10     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5ae:	8c e0       	ldi	r24, 0x0C	; 12
 5b0:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 5b4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 12) && (counter<= 13)){ PP1 = 13;
 5b8:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 5bc:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 5c0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 5c4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 5c8:	20 e0       	ldi	r18, 0x00	; 0
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	40 e4       	ldi	r20, 0x40	; 64
 5ce:	51 e4       	ldi	r21, 0x41	; 65
 5d0:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 5d4:	18 16       	cp	r1, r24
 5d6:	ac f4       	brge	.+42     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5d8:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 5dc:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 5e0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 5e4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 5e8:	20 e0       	ldi	r18, 0x00	; 0
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	40 e5       	ldi	r20, 0x50	; 80
 5ee:	51 e4       	ldi	r21, 0x41	; 65
 5f0:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 5f4:	18 16       	cp	r1, r24
 5f6:	2c f0       	brlt	.+10     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5f8:	8d e0       	ldi	r24, 0x0D	; 13
 5fa:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 5fe:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 13) && (counter<= 14)){ PP1 = 14;
 602:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 606:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 60a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 60e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	40 e5       	ldi	r20, 0x50	; 80
 618:	51 e4       	ldi	r21, 0x41	; 65
 61a:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 61e:	18 16       	cp	r1, r24
 620:	ac f4       	brge	.+42     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 622:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 626:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 62a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 62e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 632:	20 e0       	ldi	r18, 0x00	; 0
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	40 e6       	ldi	r20, 0x60	; 96
 638:	51 e4       	ldi	r21, 0x41	; 65
 63a:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 63e:	18 16       	cp	r1, r24
 640:	2c f0       	brlt	.+10     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 642:	8e e0       	ldi	r24, 0x0E	; 14
 644:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 648:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 14) && (counter<= 15)){ PP1 = 15;
 64c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 650:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 654:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 658:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 65c:	20 e0       	ldi	r18, 0x00	; 0
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	40 e6       	ldi	r20, 0x60	; 96
 662:	51 e4       	ldi	r21, 0x41	; 65
 664:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 668:	18 16       	cp	r1, r24
 66a:	ac f4       	brge	.+42     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 66c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 670:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 674:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 678:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 67c:	20 e0       	ldi	r18, 0x00	; 0
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	40 e7       	ldi	r20, 0x70	; 112
 682:	51 e4       	ldi	r21, 0x41	; 65
 684:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 688:	18 16       	cp	r1, r24
 68a:	2c f0       	brlt	.+10     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 68c:	8f e0       	ldi	r24, 0x0F	; 15
 68e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 0;}
 692:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	if((counter > 15) && (counter<= 16)){ PP1 = 0;
 696:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 69a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 69e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 6a2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 6a6:	20 e0       	ldi	r18, 0x00	; 0
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	40 e7       	ldi	r20, 0x70	; 112
 6ac:	51 e4       	ldi	r21, 0x41	; 65
 6ae:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 6b2:	18 16       	cp	r1, r24
 6b4:	ac f4       	brge	.+42     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6b6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 6ba:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 6be:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 6c2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 6c6:	20 e0       	ldi	r18, 0x00	; 0
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	40 e8       	ldi	r20, 0x80	; 128
 6cc:	51 e4       	ldi	r21, 0x41	; 65
 6ce:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 6d2:	18 16       	cp	r1, r24
 6d4:	2c f0       	brlt	.+10     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6d6:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <PP1>
	PP2 = 1;}
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 16) && (counter<= 17)){ PP1 = 1;
 6e0:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 6e4:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 6e8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 6ec:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 6f0:	20 e0       	ldi	r18, 0x00	; 0
 6f2:	30 e0       	ldi	r19, 0x00	; 0
 6f4:	40 e8       	ldi	r20, 0x80	; 128
 6f6:	51 e4       	ldi	r21, 0x41	; 65
 6f8:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 6fc:	18 16       	cp	r1, r24
 6fe:	ac f4       	brge	.+42     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 700:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 704:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 708:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 70c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 710:	20 e0       	ldi	r18, 0x00	; 0
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	48 e8       	ldi	r20, 0x88	; 136
 716:	51 e4       	ldi	r21, 0x41	; 65
 718:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 71c:	18 16       	cp	r1, r24
 71e:	2c f0       	brlt	.+10     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 726:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 17) && (counter<= 18)){ PP1 = 2;
 72a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 72e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 732:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 736:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 73a:	20 e0       	ldi	r18, 0x00	; 0
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	48 e8       	ldi	r20, 0x88	; 136
 740:	51 e4       	ldi	r21, 0x41	; 65
 742:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 746:	18 16       	cp	r1, r24
 748:	b4 f4       	brge	.+44     	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 74a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 74e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 752:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 756:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 75a:	20 e0       	ldi	r18, 0x00	; 0
 75c:	30 e0       	ldi	r19, 0x00	; 0
 75e:	40 e9       	ldi	r20, 0x90	; 144
 760:	51 e4       	ldi	r21, 0x41	; 65
 762:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 766:	18 16       	cp	r1, r24
 768:	34 f0       	brlt	.+12     	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 76a:	82 e0       	ldi	r24, 0x02	; 2
 76c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 18) && (counter<= 18)){ PP1 = 3;
 776:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 77a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 77e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 782:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 786:	20 e0       	ldi	r18, 0x00	; 0
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	40 e9       	ldi	r20, 0x90	; 144
 78c:	51 e4       	ldi	r21, 0x41	; 65
 78e:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 792:	18 16       	cp	r1, r24
 794:	b4 f4       	brge	.+44     	; 0x7c2 <__EEPROM_REGION_LENGTH__+0x3c2>
 796:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 79a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 79e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 7a2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 7a6:	20 e0       	ldi	r18, 0x00	; 0
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	40 e9       	ldi	r20, 0x90	; 144
 7ac:	51 e4       	ldi	r21, 0x41	; 65
 7ae:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 7b2:	18 16       	cp	r1, r24
 7b4:	34 f0       	brlt	.+12     	; 0x7c2 <__EEPROM_REGION_LENGTH__+0x3c2>
 7b6:	83 e0       	ldi	r24, 0x03	; 3
 7b8:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 19) && (counter<= 19)){ PP1 = 4;
 7c2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 7c6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 7ca:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 7ce:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 7d2:	20 e0       	ldi	r18, 0x00	; 0
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	48 e9       	ldi	r20, 0x98	; 152
 7d8:	51 e4       	ldi	r21, 0x41	; 65
 7da:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 7de:	18 16       	cp	r1, r24
 7e0:	b4 f4       	brge	.+44     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7e2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 7e6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 7ea:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 7ee:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 7f2:	20 e0       	ldi	r18, 0x00	; 0
 7f4:	30 e0       	ldi	r19, 0x00	; 0
 7f6:	48 e9       	ldi	r20, 0x98	; 152
 7f8:	51 e4       	ldi	r21, 0x41	; 65
 7fa:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 7fe:	18 16       	cp	r1, r24
 800:	34 f0       	brlt	.+12     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 802:	84 e0       	ldi	r24, 0x04	; 4
 804:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 808:	81 e0       	ldi	r24, 0x01	; 1
 80a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 20) && (counter<= 20)){ PP1 = 5;
 80e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 812:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 816:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 81a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 81e:	20 e0       	ldi	r18, 0x00	; 0
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	40 ea       	ldi	r20, 0xA0	; 160
 824:	51 e4       	ldi	r21, 0x41	; 65
 826:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 82a:	18 16       	cp	r1, r24
 82c:	b4 f4       	brge	.+44     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 82e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 832:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 836:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 83a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 83e:	20 e0       	ldi	r18, 0x00	; 0
 840:	30 e0       	ldi	r19, 0x00	; 0
 842:	40 ea       	ldi	r20, 0xA0	; 160
 844:	51 e4       	ldi	r21, 0x41	; 65
 846:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 84a:	18 16       	cp	r1, r24
 84c:	34 f0       	brlt	.+12     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84e:	85 e0       	ldi	r24, 0x05	; 5
 850:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 854:	81 e0       	ldi	r24, 0x01	; 1
 856:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 21) && (counter<= 21)){ PP1 = 6;
 85a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 85e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 862:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 866:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 86a:	20 e0       	ldi	r18, 0x00	; 0
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	48 ea       	ldi	r20, 0xA8	; 168
 870:	51 e4       	ldi	r21, 0x41	; 65
 872:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 876:	18 16       	cp	r1, r24
 878:	b4 f4       	brge	.+44     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 87a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 87e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 882:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 886:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 88a:	20 e0       	ldi	r18, 0x00	; 0
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	48 ea       	ldi	r20, 0xA8	; 168
 890:	51 e4       	ldi	r21, 0x41	; 65
 892:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 896:	18 16       	cp	r1, r24
 898:	34 f0       	brlt	.+12     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 89a:	86 e0       	ldi	r24, 0x06	; 6
 89c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 8a0:	81 e0       	ldi	r24, 0x01	; 1
 8a2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 22) && (counter<= 22)){ PP1 = 7;
 8a6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 8aa:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 8ae:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 8b2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 8b6:	20 e0       	ldi	r18, 0x00	; 0
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	40 eb       	ldi	r20, 0xB0	; 176
 8bc:	51 e4       	ldi	r21, 0x41	; 65
 8be:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 8c2:	18 16       	cp	r1, r24
 8c4:	b4 f4       	brge	.+44     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8c6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 8ca:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 8ce:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 8d2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 8d6:	20 e0       	ldi	r18, 0x00	; 0
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	40 eb       	ldi	r20, 0xB0	; 176
 8dc:	51 e4       	ldi	r21, 0x41	; 65
 8de:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 8e2:	18 16       	cp	r1, r24
 8e4:	34 f0       	brlt	.+12     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8e6:	87 e0       	ldi	r24, 0x07	; 7
 8e8:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 8ec:	81 e0       	ldi	r24, 0x01	; 1
 8ee:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 23) && (counter<= 23)){ PP1 = 8;
 8f2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 8f6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 8fa:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 8fe:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 902:	20 e0       	ldi	r18, 0x00	; 0
 904:	30 e0       	ldi	r19, 0x00	; 0
 906:	48 eb       	ldi	r20, 0xB8	; 184
 908:	51 e4       	ldi	r21, 0x41	; 65
 90a:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 90e:	18 16       	cp	r1, r24
 910:	b4 f4       	brge	.+44     	; 0x93e <__stack+0x3f>
 912:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 916:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 91a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 91e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 922:	20 e0       	ldi	r18, 0x00	; 0
 924:	30 e0       	ldi	r19, 0x00	; 0
 926:	48 eb       	ldi	r20, 0xB8	; 184
 928:	51 e4       	ldi	r21, 0x41	; 65
 92a:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 92e:	18 16       	cp	r1, r24
 930:	34 f0       	brlt	.+12     	; 0x93e <__stack+0x3f>
 932:	88 e0       	ldi	r24, 0x08	; 8
 934:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 938:	81 e0       	ldi	r24, 0x01	; 1
 93a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 24) && (counter<= 24)){ PP1 = 9;
 93e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 942:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 946:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 94a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 94e:	20 e0       	ldi	r18, 0x00	; 0
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	40 ec       	ldi	r20, 0xC0	; 192
 954:	51 e4       	ldi	r21, 0x41	; 65
 956:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 95a:	18 16       	cp	r1, r24
 95c:	b4 f4       	brge	.+44     	; 0x98a <__stack+0x8b>
 95e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 962:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 966:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 96a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 96e:	20 e0       	ldi	r18, 0x00	; 0
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	40 ec       	ldi	r20, 0xC0	; 192
 974:	51 e4       	ldi	r21, 0x41	; 65
 976:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 97a:	18 16       	cp	r1, r24
 97c:	34 f0       	brlt	.+12     	; 0x98a <__stack+0x8b>
 97e:	89 e0       	ldi	r24, 0x09	; 9
 980:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 25) && (counter<= 25)){ PP1 = 10;
 98a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 98e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 992:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 996:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 99a:	20 e0       	ldi	r18, 0x00	; 0
 99c:	30 e0       	ldi	r19, 0x00	; 0
 99e:	48 ec       	ldi	r20, 0xC8	; 200
 9a0:	51 e4       	ldi	r21, 0x41	; 65
 9a2:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 9a6:	18 16       	cp	r1, r24
 9a8:	b4 f4       	brge	.+44     	; 0x9d6 <__stack+0xd7>
 9aa:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 9ae:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 9b2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 9b6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 9ba:	20 e0       	ldi	r18, 0x00	; 0
 9bc:	30 e0       	ldi	r19, 0x00	; 0
 9be:	48 ec       	ldi	r20, 0xC8	; 200
 9c0:	51 e4       	ldi	r21, 0x41	; 65
 9c2:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 9c6:	18 16       	cp	r1, r24
 9c8:	34 f0       	brlt	.+12     	; 0x9d6 <__stack+0xd7>
 9ca:	8a e0       	ldi	r24, 0x0A	; 10
 9cc:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 9d0:	81 e0       	ldi	r24, 0x01	; 1
 9d2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 26) && (counter<= 26)){ PP1 = 11;
 9d6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 9da:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 9de:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 9e2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 9e6:	20 e0       	ldi	r18, 0x00	; 0
 9e8:	30 e0       	ldi	r19, 0x00	; 0
 9ea:	40 ed       	ldi	r20, 0xD0	; 208
 9ec:	51 e4       	ldi	r21, 0x41	; 65
 9ee:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 9f2:	18 16       	cp	r1, r24
 9f4:	b4 f4       	brge	.+44     	; 0xa22 <__stack+0x123>
 9f6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 9fa:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 9fe:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 a02:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 a06:	20 e0       	ldi	r18, 0x00	; 0
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	40 ed       	ldi	r20, 0xD0	; 208
 a0c:	51 e4       	ldi	r21, 0x41	; 65
 a0e:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 a12:	18 16       	cp	r1, r24
 a14:	34 f0       	brlt	.+12     	; 0xa22 <__stack+0x123>
 a16:	8b e0       	ldi	r24, 0x0B	; 11
 a18:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 a1c:	81 e0       	ldi	r24, 0x01	; 1
 a1e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 27) && (counter<= 27)){ PP1 = 12;
 a22:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 a26:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 a2a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 a2e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 a32:	20 e0       	ldi	r18, 0x00	; 0
 a34:	30 e0       	ldi	r19, 0x00	; 0
 a36:	48 ed       	ldi	r20, 0xD8	; 216
 a38:	51 e4       	ldi	r21, 0x41	; 65
 a3a:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 a3e:	18 16       	cp	r1, r24
 a40:	b4 f4       	brge	.+44     	; 0xa6e <__stack+0x16f>
 a42:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 a46:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 a4a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 a4e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 a52:	20 e0       	ldi	r18, 0x00	; 0
 a54:	30 e0       	ldi	r19, 0x00	; 0
 a56:	48 ed       	ldi	r20, 0xD8	; 216
 a58:	51 e4       	ldi	r21, 0x41	; 65
 a5a:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 a5e:	18 16       	cp	r1, r24
 a60:	34 f0       	brlt	.+12     	; 0xa6e <__stack+0x16f>
 a62:	8c e0       	ldi	r24, 0x0C	; 12
 a64:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 a68:	81 e0       	ldi	r24, 0x01	; 1
 a6a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 28) && (counter<= 28)){ PP1 = 13;
 a6e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 a72:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 a76:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 a7a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 a7e:	20 e0       	ldi	r18, 0x00	; 0
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	40 ee       	ldi	r20, 0xE0	; 224
 a84:	51 e4       	ldi	r21, 0x41	; 65
 a86:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 a8a:	18 16       	cp	r1, r24
 a8c:	b4 f4       	brge	.+44     	; 0xaba <__stack+0x1bb>
 a8e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 a92:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 a96:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 a9a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 a9e:	20 e0       	ldi	r18, 0x00	; 0
 aa0:	30 e0       	ldi	r19, 0x00	; 0
 aa2:	40 ee       	ldi	r20, 0xE0	; 224
 aa4:	51 e4       	ldi	r21, 0x41	; 65
 aa6:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 aaa:	18 16       	cp	r1, r24
 aac:	34 f0       	brlt	.+12     	; 0xaba <__stack+0x1bb>
 aae:	8d e0       	ldi	r24, 0x0D	; 13
 ab0:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 ab4:	81 e0       	ldi	r24, 0x01	; 1
 ab6:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 29) && (counter<= 29)){ PP1 = 14;
 aba:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 abe:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 ac2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 ac6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 aca:	20 e0       	ldi	r18, 0x00	; 0
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	48 ee       	ldi	r20, 0xE8	; 232
 ad0:	51 e4       	ldi	r21, 0x41	; 65
 ad2:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 ad6:	18 16       	cp	r1, r24
 ad8:	b4 f4       	brge	.+44     	; 0xb06 <__stack+0x207>
 ada:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 ade:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 ae2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 ae6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 aea:	20 e0       	ldi	r18, 0x00	; 0
 aec:	30 e0       	ldi	r19, 0x00	; 0
 aee:	48 ee       	ldi	r20, 0xE8	; 232
 af0:	51 e4       	ldi	r21, 0x41	; 65
 af2:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 af6:	18 16       	cp	r1, r24
 af8:	34 f0       	brlt	.+12     	; 0xb06 <__stack+0x207>
 afa:	8e e0       	ldi	r24, 0x0E	; 14
 afc:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 b00:	81 e0       	ldi	r24, 0x01	; 1
 b02:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 30) && (counter<= 30)){ PP1 = 15;
 b06:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 b0a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 b0e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 b12:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 b16:	20 e0       	ldi	r18, 0x00	; 0
 b18:	30 e0       	ldi	r19, 0x00	; 0
 b1a:	40 ef       	ldi	r20, 0xF0	; 240
 b1c:	51 e4       	ldi	r21, 0x41	; 65
 b1e:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 b22:	18 16       	cp	r1, r24
 b24:	b4 f4       	brge	.+44     	; 0xb52 <__stack+0x253>
 b26:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 b2a:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 b2e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 b32:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 b36:	20 e0       	ldi	r18, 0x00	; 0
 b38:	30 e0       	ldi	r19, 0x00	; 0
 b3a:	40 ef       	ldi	r20, 0xF0	; 240
 b3c:	51 e4       	ldi	r21, 0x41	; 65
 b3e:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 b42:	18 16       	cp	r1, r24
 b44:	34 f0       	brlt	.+12     	; 0xb52 <__stack+0x253>
 b46:	8f e0       	ldi	r24, 0x0F	; 15
 b48:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <PP1>
	PP2 = 1;}
 b4c:	81 e0       	ldi	r24, 0x01	; 1
 b4e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if((counter > 31) && (counter<= 31)){ PP1 = 0;
 b52:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 b56:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 b5a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 b5e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 b62:	20 e0       	ldi	r18, 0x00	; 0
 b64:	30 e0       	ldi	r19, 0x00	; 0
 b66:	48 ef       	ldi	r20, 0xF8	; 248
 b68:	51 e4       	ldi	r21, 0x41	; 65
 b6a:	0e 94 08 06 	call	0xc10	; 0xc10 <__gesf2>
 b6e:	18 16       	cp	r1, r24
 b70:	ac f4       	brge	.+42     	; 0xb9c <__stack+0x29d>
 b72:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <counter>
 b76:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <counter+0x1>
 b7a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter+0x2>
 b7e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x3>
 b82:	20 e0       	ldi	r18, 0x00	; 0
 b84:	30 e0       	ldi	r19, 0x00	; 0
 b86:	48 ef       	ldi	r20, 0xF8	; 248
 b88:	51 e4       	ldi	r21, 0x41	; 65
 b8a:	0e 94 df 05 	call	0xbbe	; 0xbbe <__cmpsf2>
 b8e:	18 16       	cp	r1, r24
 b90:	2c f0       	brlt	.+10     	; 0xb9c <__stack+0x29d>
 b92:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <PP1>
	PP2 = 2;}
 b96:	82 e0       	ldi	r24, 0x02	; 2
 b98:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>

	//ADCSRA |= (1<<ADIF);
}
 b9c:	ff 91       	pop	r31
 b9e:	ef 91       	pop	r30
 ba0:	bf 91       	pop	r27
 ba2:	af 91       	pop	r26
 ba4:	9f 91       	pop	r25
 ba6:	8f 91       	pop	r24
 ba8:	7f 91       	pop	r23
 baa:	6f 91       	pop	r22
 bac:	5f 91       	pop	r21
 bae:	4f 91       	pop	r20
 bb0:	3f 91       	pop	r19
 bb2:	2f 91       	pop	r18
 bb4:	0f 90       	pop	r0
 bb6:	0f be       	out	0x3f, r0	; 63
 bb8:	0f 90       	pop	r0
 bba:	1f 90       	pop	r1
 bbc:	18 95       	reti

00000bbe <__cmpsf2>:
 bbe:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fp_cmp>
 bc2:	08 f4       	brcc	.+2      	; 0xbc6 <__cmpsf2+0x8>
 bc4:	81 e0       	ldi	r24, 0x01	; 1
 bc6:	08 95       	ret

00000bc8 <__fp_cmp>:
 bc8:	99 0f       	add	r25, r25
 bca:	00 08       	sbc	r0, r0
 bcc:	55 0f       	add	r21, r21
 bce:	aa 0b       	sbc	r26, r26
 bd0:	e0 e8       	ldi	r30, 0x80	; 128
 bd2:	fe ef       	ldi	r31, 0xFE	; 254
 bd4:	16 16       	cp	r1, r22
 bd6:	17 06       	cpc	r1, r23
 bd8:	e8 07       	cpc	r30, r24
 bda:	f9 07       	cpc	r31, r25
 bdc:	c0 f0       	brcs	.+48     	; 0xc0e <__fp_cmp+0x46>
 bde:	12 16       	cp	r1, r18
 be0:	13 06       	cpc	r1, r19
 be2:	e4 07       	cpc	r30, r20
 be4:	f5 07       	cpc	r31, r21
 be6:	98 f0       	brcs	.+38     	; 0xc0e <__fp_cmp+0x46>
 be8:	62 1b       	sub	r22, r18
 bea:	73 0b       	sbc	r23, r19
 bec:	84 0b       	sbc	r24, r20
 bee:	95 0b       	sbc	r25, r21
 bf0:	39 f4       	brne	.+14     	; 0xc00 <__fp_cmp+0x38>
 bf2:	0a 26       	eor	r0, r26
 bf4:	61 f0       	breq	.+24     	; 0xc0e <__fp_cmp+0x46>
 bf6:	23 2b       	or	r18, r19
 bf8:	24 2b       	or	r18, r20
 bfa:	25 2b       	or	r18, r21
 bfc:	21 f4       	brne	.+8      	; 0xc06 <__fp_cmp+0x3e>
 bfe:	08 95       	ret
 c00:	0a 26       	eor	r0, r26
 c02:	09 f4       	brne	.+2      	; 0xc06 <__fp_cmp+0x3e>
 c04:	a1 40       	sbci	r26, 0x01	; 1
 c06:	a6 95       	lsr	r26
 c08:	8f ef       	ldi	r24, 0xFF	; 255
 c0a:	81 1d       	adc	r24, r1
 c0c:	81 1d       	adc	r24, r1
 c0e:	08 95       	ret

00000c10 <__gesf2>:
 c10:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fp_cmp>
 c14:	08 f4       	brcc	.+2      	; 0xc18 <__gesf2+0x8>
 c16:	8f ef       	ldi	r24, 0xFF	; 255
 c18:	08 95       	ret

00000c1a <_exit>:
 c1a:	f8 94       	cli

00000c1c <__stop_program>:
 c1c:	ff cf       	rjmp	.-2      	; 0xc1c <__stop_program>
